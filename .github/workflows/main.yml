name: Application CI
on: [push, pull_request]
jobs:
  pipeline:
    name: TruckMotion pipeline
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.pull_request.title, '[skip ci]') && !contains(github.event.pull_request.title, '[ci skip]')"
    timeout-minutes: 40
    env:
      NODE_VERSION: 20.12.2
      SPRING_OUTPUT_ANSI_ENABLED: DETECT
      SPRING_JPA_SHOW_SQL: false
      JHI_DISABLE_WEBPACK_LOGS: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.12.2
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Install Node.js packages
        working-directory: ./Sprint1_TruckMotion
        run: npm install
      # - name: Run backend test
      #   working-directory: ./Sprint1_TruckMotion
      #   run: |
      #     chmod +x mvnw
      #     npm run ci:backend:test
      - name: Run frontend test
        working-directory: ./Sprint1_TruckMotion
        run: npm run ci:frontend:test
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        working-directory: ./Sprint1_TruckMotion
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -DskipTests -Dsonar.projectKey=RafaelFaisca32_desofs2024_M1C_3
      - name: Depcheck
        uses: dependency-check/Dependency-Check_Action@main
        id: Depcheck
        env:
          JAVA_HOME: /opt/jdk
        with:
          project: 'truckmotion'
          path: './Sprint1_TruckMotion'
          format: 'HTML'
          args: >
            --enableRetired
      - name: Upload Test results
        uses: actions/upload-artifact@master
        with:
          name: Depcheck report
          path: ${{github.workspace}}/reports
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker Image
        working-directory: ./Sprint1_TruckMotion
        run: 
          npm run java:docker
      - name: Build and push
        run: |
          docker push ${{ secrets.DOCKER_HUB_REPO }}
      - name: Webhook for render deployment
        uses: distributhor/workflow-webhook@v3
        with:
          webhook_url: ${{ secrets.RENDER_WEBHOOK }}
